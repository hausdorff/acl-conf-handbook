SubmissionNumber#=%=#1
FinalPaperTitle#=%=#[TACL] Finding Optimal 1-Endpoint-Crossing Trees
ShortPaperTitle#=%=#[TACL] Finding Optimal 1-Endpoint-Crossing Trees
Author{1}{Lastname}#=%=#Pitler
Author{1}{Firstname}#=%=#Emily
Author{1}{Email}#=%=#epitler@seas.upenn.edu
Author{1}{Affiliation}#=%=#University of Pennsylvania
Author{2}{Lastname}#=%=#Kannan
Author{2}{Firstname}#=%=#Sampath
Author{2}{Email}#=%=#kannan@seas.upenn.edu
Author{2}{Affiliation}#=%=#University of Pennsylvania
Author{3}{Lastname}#=%=#Marcus
Author{3}{Firstname}#=%=#Mitchell
Author{3}{Email}#=%=#mitch@seas.upenn.edu
Author{3}{Affiliation}#=%=#University of Pennsylvania
Author{4}{Lastname}#=%=#
Author{4}{Firstname}#=%=#
Author{4}{Email}#=%=#
Author{4}{Affiliation}#=%=#
Author{5}{Lastname}#=%=#
Author{5}{Firstname}#=%=#
Author{5}{Email}#=%=#
Author{5}{Affiliation}#=%=#
Author{6}{Lastname}#=%=#
Author{6}{Firstname}#=%=#
Author{6}{Email}#=%=#
Author{6}{Affiliation}#=%=#
Author{7}{Lastname}#=%=#
Author{7}{Firstname}#=%=#
Author{7}{Email}#=%=#
Author{7}{Affiliation}#=%=#
Author{8}{Lastname}#=%=#
Author{8}{Firstname}#=%=#
Author{8}{Email}#=%=#
Author{8}{Affiliation}#=%=#
Author{9}{Lastname}#=%=#
Author{9}{Firstname}#=%=#
Author{9}{Email}#=%=#
Author{9}{Affiliation}#=%=#
Author{10}{Lastname}#=%=#
Author{10}{Firstname}#=%=#
Author{10}{Email}#=%=#
Author{10}{Affiliation}#=%=#
Author{11}{Lastname}#=%=#
Author{11}{Firstname}#=%=#
Author{11}{Email}#=%=#
Author{11}{Affiliation}#=%=#
Author{12}{Lastname}#=%=#
Author{12}{Firstname}#=%=#
Author{12}{Email}#=%=#
Author{12}{Affiliation}#=%=#
Author{13}{Lastname}#=%=#
Author{13}{Firstname}#=%=#
Author{13}{Email}#=%=#
Author{13}{Affiliation}#=%=#
Author{14}{Lastname}#=%=#
Author{14}{Firstname}#=%=#
Author{14}{Email}#=%=#
Author{14}{Affiliation}#=%=#
Author{15}{Lastname}#=%=#
Author{15}{Firstname}#=%=#
Author{15}{Email}#=%=#
Author{15}{Affiliation}#=%=#
NumberOfPages#=%=#12
CopyrightSigned#=%=#
JobTitle#==#
Organization#==#
Abstract#==#Dependency parsing algorithms capable of producing the types of crossing
dependencies seen in natural language sentences have traditionally been orders
of magnitude slower than algorithms for projective trees. For 95.8--99.8% of
dependency parses in various natural language treebanks, whenever an edge is
crossed, the edges that cross it all have a common vertex. The optimal
dependency tree that satisfies this 1-Endpoint-Crossing property can be found
with an O(n4) parsing algorithm that recursively combines forests over
intervals with one exterior point. 1-Endpoint-Crossing trees also have natural
connections to linguistics and another class of graphs that has been studied in
NLP.
==========